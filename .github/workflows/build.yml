name: _step.build

on:
  workflow_call:
    inputs:
      release:
        type: boolean
        required: false
        default: false
      target_version:
        description: see release.yml, leave it empty to build all
        type: string
        required: false
        default: ''

jobs:

  matrix_prep:
    uses: ./.github/workflows/matrix_prep.yml
    with:
      target_version: ${{ github.event.inputs.target_version }}

  build:
    needs:
      - matrix_prep
    strategy:
      matrix: ${{ fromJson(needs.matrix_prep.outputs.matrix) }}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Cache gradle files
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ./.gradle/loom-cache
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/gradle.properties', '**/*.accesswidener', 'settings.json') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Read common properties
        id: properties_g
        uses: christian-draeger/read-properties@1.1.1
        with:
          path: gradle.properties
          properties: 'mod_name mod_version'

      - name: Build with gradle
        run: |
          chmod +x gradlew
          args=$(echo "${{ matrix.platforms }}" | tr ',' '\n' | sed 's/^/build-/' | sed 's/$/-${{ matrix.version }}/')
          echo "Building with arguments=$args"
          ./gradlew $args
        env:
          BUILD_ID: ${{ github.run_number }}
          BUILD_RELEASE: ${{ inputs.release }}

      - name: Merge Jars
        run: |
          zip_paths=$(echo "${{ matrix.platforms }}" | tr ',' '\n' | sed 's/^/versions\//' | sed 's/$/-${{ matrix.version }}\/build\/libs\/*-relocate.jar/')
          
          output_path="build/libs/${{ steps.properties_g.outputs.mod_name }}-v${{ steps.properties_g.outputs.mod_version }}-mc${{ matrix.version }}.jar"
          work_dir="temp_work_dir"
          
          mkdir -p "$work_dir"
          
          for zip_path in "${zip_paths[@]}"; do
            for file in "$zip_path"; do
              unzip -o "$file" -d "$work_dir"
            done
          done
          
          zip -j "$output_path" "$work_dir"/*
          
          rm -rf "$work_dir"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: build/libs/

  summary:
    runs-on: ubuntu-latest
    needs:
      - build

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: build-artifacts

      - name: Make build summary
        run: |
          pip install jproperties
          python .github/workflows/scripts/summary.py
        env:
          TARGET_VERSION: ${{ inputs.target_version }}